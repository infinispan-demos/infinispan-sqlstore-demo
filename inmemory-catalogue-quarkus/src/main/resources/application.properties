quarkus.banner.enabled=false
%dev.quarkus.http.port=8180

# Disable dev services since we are using docker compose
quarkus.infinispan-client.devservices.enabled=false
quarkus.infinispan-client.hosts=localhost:11222
quarkus.infinispan-client.username=admin
quarkus.infinispan-client.password=secret
# SQL Store caches in Infinispan will connect to the postgres docker container in docker-compose
%dev.inmemory.dialect=POSTGRES
%dev.inmemory.driver=org.postgresql.Driver
%dev.inmemory.connection-url=jdbc:postgresql://database:5432/retailstore
%dev.inmemory.username=infinispan
%dev.inmemory.password=secret

%prod.quarkus.infinispan-client.hosts=infinispan-external:11222
%prod.quarkus.infinispan-client.username=${infinispan-username}
%prod.quarkus.infinispan-client.password=${infinispan-password}

%prod.inmemory.dialect=POSTGRES
%prod.inmemory.driver=org.postgresql.Driver
%prod.inmemory.connection-url=jdbc:postgresql://postgres.default:5432/retailstore
%prod.inmemory.username=${db-username}
%prod.inmemory.password=${db-password}

%prod.quarkus.openshift.route.expose=true

## Kubernetes extension
quarkus.container-image.group=org.infinispan
quarkus.container-image.name=inmemory-catalogue-service
quarkus.kubernetes.name=inmemory-catalogue-service

## Enable Kubernetes Config and Secrets
%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=sqlstore-credentials

